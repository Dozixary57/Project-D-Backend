//Timer
//setTimeout(() => {
//    fastify.close(() => {
//        console.log('Server stopped');
//    });
//}, 600000);


//// Declare a route
//fastify.get('/Item/:id', async function (req, reply) {
//    try {
//        const id = new this.mongo.ObjectId(req.params.id)
//        const item = await fastify.mongo.db.collection('items').findOne({ _id: id })
//        reply.status(200).send(item)
//    } catch (err) {
//        reply.send(err)
//    }
//})


//reply.header('Cache-Control', 'public, max-age=30');


//fastify.get('/Item/:id', async function (req, reply) {
    //    // http://localhost:5000/Item/64825519e97f28274a958dca
    //    try {
    //        if (mongodb.ObjectId.isValid(req.params.id)) {
    //            const id = new this.mongo.ObjectId(req.params.id)
    //            const item = await fastify.mongo.db.collection('items2').findOne({ _id: id })
    //            if (item) {
    //                //reply.redirect(301, `/Item/${item.itemTitle}`).send(item)
    //                reply.status(200).send(item)
    //                return
    //            }
    //        } else {
    //            const Title_ = req.params.id
    //            const Title = Title_.replace(/_/g, ' ')
    //            const item = await fastify.mongo.db.collection('items2').findOne({ itemTitle: Title })
    //            reply.send(Title_)
    //            //if (item) {
    //            //    //reply.redirect(301, `/Item/${item.itemTitle}`).send(item)
    //            //    console.log(chalk.red('Found!'))
    //            //    reply.status(200).send(item)
    //            //    return
    //            //} else {
    //            //    console.log('Not found!')
    //            //    reply.status(404).send('Item not found.')
    //            //    return
    //            //}
    //        }
    //    } catch (err) {
    //        reply.send(err);
    //    }
    //})

//�� ������ ����� ����� ������� (�� �������, ���� �����_��� � URL) ���!!! �� ���� ������(((
 fastify.get('/Item/:id', async function (req, reply) {
        // http://localhost:5000/Item/64825519e97f28274a958dca
        try {
            if (mongodb.ObjectId.isValid(req.params.id)) {
                const id = new this.mongo.ObjectId(req.params.id)
                const item = await fastify.mongo.db.collection('items2').findOne({ _id: id })
                if (item) {
                    //reply.redirect(301, `/Item/${item.itemTitle}`).send(item)
                    reply.status(200).send(item)
                    return
                }
            } else {
                const Title_ = req.params.id
                const Title = Title_.replace(/_/g, ' ')
                const item = await fastify.mongo.db.collection('items2').findOne({ itemTitle: Title })
                reply.send(Title_)
                //if (item) {
                //    //reply.redirect(301, `/Item/${item.itemTitle}`).send(item)
                //    console.log(chalk.red('Found!'))
                //    reply.status(200).send(item)
                //    return
                //} else {
                //    console.log('Not found!')
                //    reply.status(404).send('Item not found.')
                //    return
                //}
            }
        } catch (err) {
            reply.send(err);
        }
    })
}

            //const id = new this.mongo.ObjectId(req.params.id)
            //const file = await this.mongo.db.collection('fs.files').findOne({ _id: id })

            //if (!file) {
            //    reply.status(404).send('File not found!')
            //    return
            //} else {
            //    reply.status(200).send(file.filename)
            //    return
            //}
            
            
            
            
            /*            if (fs.existsSync(path.join('GridFS', 'Covers', `Branch.png`))) {
                            console.log('Файл существует');
                        } else {
                            console.log('Файл не существует');
                        }*/
                        
                        // const id = new this.mongo.ObjectId(req.params.id)
                        
                        // reply.send(path.join(process.cwd(), 'GridFS', 'Covers', `${id}`));
            
            /*            const db = this.mongo.db;
                        const bucket = new mongodb.GridFSBucket(db, { bucketName: 'fs' });
                        const fileCursor = bucket.find({ _id: id });
            
                        if (await fileCursor.hasNext()) {
                            const filename = (await fileCursor.next()).filename;
                            const imagePath = path.join(process.cwd(), 'GridFS', 'Covers', `${filename}`);
                            reply.send(imagePath);
                        } else {
                            reply.code(404).send({ error: 'Image not found' });
                        }*/






                            // Items Collection Data Updater
                            const ItemsDataChangeStream = fastify.mongo.db.collection('Items').watch()
                            ItemsDataChangeStream.on('change', () => {
                                Logger.DB('Change detected.');
                                // WebSocketEvent
                        /*        fastify.websocket.on('connection', (socket, request) => {
                                    socket.send(JSON.stringify({message: 'Hello from server'}));

                        /!*            socket.on('message', message => {
                                        // Обработка сообщения от клиента
                                    });*!/

                                })*/
                            })







